name: Build Application

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
    paths:
      - "**/*.gradle.kts"
      - "**/*.gradle"
      - "app/src/**"
      - ".github/workflows/build.yml"
  push:
    branches: [main]
    paths:
      - "**/*.gradle.kts"
      - "**/*.gradle"
      - "app/src/**"
      - ".github/workflows/build.yml"

jobs:
  build-app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17 and Gradle cache
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "gradle"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3.2.1

      - name: Decode Keystore
        id: keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE_BASE_64 }}
        run: |
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > keystore.jks
          echo "keystore=$(find ~+ -type f -name keystore.jks)" >> $GITHUB_OUTPUT

      - name: Make Gradle executable
        run: chmod +x gradlew

      - name: Build Release apk
        run: ./gradlew assembleRelease -Pandroid.injected.signing.store.file="${{ steps.keystore.outputs.keystore }}" -Pandroid.injected.signing.store.password="${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" -Pandroid.injected.signing.key.alias="${{ secrets.RELEASE_KEYSTORE_ALIAS }}" -Pandroid.injected.signing.key.password="${{ secrets.RELEASE_KEY_PASSWORD }}" --stacktrace

      - name: Get release file apk path
        id: releaseApk
        run: echo "apkfile=$(find app/build/outputs/apk/release/*.apk)" >> $GITHUB_OUTPUT

      - name: Upload Release APK to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: ${{ steps.releaseApk.outputs.apkfile }}